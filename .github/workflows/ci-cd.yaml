name: CI/CD

on:
  push:
    branches:
      - heml-charts

env:
  AWS_REGION: eu-west-2
  ECR_REPOSITORY_FILMS: 248441125472.dkr.ecr.eu-west-2.amazonaws.com/demo-repo-films
  ECR_REPOSITORY_PAYMENTS: 248441125472.dkr.ecr.eu-west-2.amazonaws.com/demo-repo-payments
  STAGING_CONTEXT: arn:aws:eks:eu-west-2:248441125472:cluster/demo-eks-cluster-staging
  PROD_CONTEXT: arn:aws:eks:eu-west-2:248441125472:cluster/demo-eks-cluster-prod

jobs:
  build-and-deploy-staging:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set short SHA
        run: echo "SHORT_SHA=$(echo ${GITHUB_SHA::8})" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push films Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.ECR_REPOSITORY_FILMS }}:${{ env.SHORT_SHA }}
          file: Dockerfile.films

      - name: Build and push payments Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.ECR_REPOSITORY_PAYMENTS }}:${{ env.SHORT_SHA }}
          file: Dockerfile.payments

      - name: Set up Kubernetes environment
        uses: azure/setup-kubectl@v1

      - name: Deploy to staging
        run: |
          kubectl config use-context ${{ env.STAGING_CONTEXT }}
          helm upgrade --install tdk-microservices-demo ./infrastructure/helm/charts/tdk-microservices-demo \
            --values ./infrastructure/helm/environments/staging/values-staging.yaml \
            --namespace tdk-microservices-demo \
            --set services.films.image.tag=${{ env.SHORT_SHA }} \
            --set services.payments.image.tag=${{ env.SHORT_SHA }}

      - name: Run tests
        run: |
          curl -sfL "http://staging.tdk-microservices-demo.synthesized.io/api/v1/films/1" || exit 1

      - name: Rollback on test failure
        if: ${{ failure() }}
        run: |
          helm rollback tdk-microservices-demo
          exit 1

  deploy-to-production:
    runs-on: ubuntu-latest
    needs: build-and-deploy-staging

    steps:
      - name: Deploy to production
        if: github.event_name == 'workflow_dispatch'
        run: |
          kubectl config use-context ${{ env.PROD_CONTEXT }}
          helm upgrade --install tdk-microservices-demo ./infrastructure/helm/charts/tdk-microservices-demo \
            --values ./infrastructure/helm/environments/production/values-production.yaml \
            --namespace tdk-microservices-demo \
            --set services.films.image.tag=${{ env.SHORT_SHA }} \
            --set services.payments.image.tag=${{ env.SHORT_SHA }}
